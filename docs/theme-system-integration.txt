主題切換系統整合指南📋 概述本指南說明如何將主題切換系統整合到金錢教學遊戲的各個單元中，提供生動活潑模式和深色護眼模式兩種主題選擇。🎯 主題系統特色🌈 生動活潑模式 - 明亮鮮豔的色彩，適合日間使用🌙 深色護眼模式 - 柔和深色調，減少眼部疲勞🔄 自動切換 - 支援系統偏好檢測和記憶用戶選擇♿ 無障礙支援 - 完整的鍵盤操作和語音提示📱 響應式設計 - 適配不同螢幕尺寸---🚀 快速開始步驟一：添加核心檔案在 HTML 頁面的 `<head>` 部分添加主題系統樣式：```html<!-- 在其他 CSS 之前載入主題系統 --><link rel="stylesheet" href="css/theme-system.css"><link rel="stylesheet" href="css/your-unit.css">```在 `</body>` 結束標籤前添加主題系統腳本：```html<!-- 在其他 JavaScript 之前載入 --><script src="js/theme-system.js"></script><script src="js/your-unit.js"></script>```步驟二：更新 CSS 使用主題變數將現有的硬編碼顏色值替換為主題變數：```css/* 原始樣式 */.my-element {    background: #f5f7fa;    color: #333333;    border: 1px solid #e0e0e0;}/* 使用主題變數 */.my-element {    background: var(--background-secondary);    color: var(--text-primary);    border: 1px solid var(--border-color);    transition: var(--transition-normal);}```步驟三：測試主題切換開啟頁面後，主題切換器會自動出現在右上角。可以：點擊切換器 來切換主題使用 Ctrl+T 快捷鍵 快速切換設定會自動保存 並在下次訪問時恢復---🎨 主題變數對照表主要色彩變數| 變數名稱 | 生動模式 | 深色模式 | 用途 ||---------|----------|----------|------|| `--primary-color` | #667eea | #4f8cff | 主要品牌色 || `--secondary-color` | #764ba2 | #6c5ce7 | 次要色彩 || `--accent-color` | #FF6B6B | #fd79a8 | 強調色彩 |背景色變數| 變數名稱 | 生動模式 | 深色模式 | 用途 ||---------|----------|----------|------|| `--background-primary` | 淺色漸層 | 深色漸層 | 主要背景 || `--background-secondary` | #ffffff | #2c3e50 | 次要背景 || `--background-card` | #ffffff | #34495e | 卡片背景 |文字色變數| 變數名稱 | 生動模式 | 深色模式 | 用途 ||---------|----------|----------|------|| `--text-primary` | #333333 | #ecf0f1 | 主要文字 || `--text-secondary` | #666666 | #bdc3c7 | 次要文字 || `--text-muted` | #999999 | #95a5a6 | 淡化文字 || `--text-inverse` | #ffffff | #2c3e50 | 反色文字 |其他重要變數```css/* 邊框 */--border-color: 邊框色彩--border-light: 淺色邊框/* 狀態色彩 */--success-color: 成功色--warning-color: 警告色--error-color: 錯誤色/* 陰影 */--shadow-light: 淺色陰影--shadow-medium: 中等陰影--shadow-heavy: 重陰影/* 圓角 */--radius-small: 8px--radius-medium: 12px--radius-large: 20px/* 動畫 */--transition-fast: 0.2s ease--transition-normal: 0.3s ease--transition-slow: 0.5s ease```---🔧 詳細整合步驟1. HTML 結構整合基本 HTML 模板：```html<!DOCTYPE html><html lang="zh-TW"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>您的單元標題</title>        <!-- 主題系統樣式（必須在其他 CSS 之前） -->    <link rel="stylesheet" href="css/theme-system.css">    <link rel="stylesheet" href="css/your-unit.css"></head><body>    <!-- 您的頁面內容 -->    <main id="app">        <!-- 遊戲內容 -->    </main>        <!-- 主題系統腳本（必須在其他 JavaScript 之前） -->    <script src="js/theme-system.js"></script>    <script src="js/your-unit.js"></script></body></html>```2. CSS 樣式更新更新現有樣式：```css/* 步驟 2.1: 全域容器 */body {    background: var(--background-primary);    color: var(--text-primary);    transition: var(--transition-normal);}/* 步驟 2.2: 卡片和面板 */.card, .panel, .content-box {    background: var(--background-card);    border: 1px solid var(--border-color);    box-shadow: var(--shadow-medium);    border-radius: var(--radius-medium);    transition: var(--transition-normal);}/* 步驟 2.3: 按鈕 */.btn-primary {    background: var(--primary-color);    color: var(--text-inverse);    border: none;    border-radius: var(--radius-medium);    transition: var(--transition-normal);}.btn-primary:hover {    background: var(--primary-dark);    transform: translateY(-2px);}/* 步驟 2.4: 輸入框 */input, textarea, select {    background: var(--background-card);    color: var(--text-primary);    border: 2px solid var(--border-color);    border-radius: var(--radius-small);    transition: var(--transition-normal);}input:focus, textarea:focus, select:focus {    border-color: var(--primary-color);    outline: none;}```3. JavaScript 整合在您的遊戲 JavaScript 中：```javascript// 步驟 3.1: 監聽主題變化document.addEventListener('themechange', function(event) {    const { theme, themeInfo } = event.detail;    console.log('主題已切換至:', themeInfo.displayName);        // 可以在這裡執行主題相關的邏輯    onThemeChanged(theme);});// 步驟 3.2: 主題變化處理函數function onThemeChanged(themeName) {    // 更新遊戲邏輯（如果需要）    if (themeName === 'dark') {        // 深色模式特殊處理        adjustForDarkMode();    } else {        // 生動模式特殊處理        adjustForVibrantMode();    }}// 步驟 3.3: 獲取當前主題function getCurrentTheme() {    if (window.ThemeSystem) {        return window.ThemeSystem.getCurrentTheme();    }    return null;}// 步驟 3.4: 程式切換主題（如果需要）function switchToTheme(themeName) {    if (window.setTheme) {        window.setTheme(themeName);    }}```---🎮 各單元整合範例單元一至五：既有單元整合步驟 1: 更新 HTML```html<!-- 在 unit1.html, unit2.html, ... unit5.html 中添加 --><link rel="stylesheet" href="css/theme-system.css"><script src="js/theme-system.js"></script>```步驟 2: 批量更新 CSS使用查找替換功能更新常見的色彩值：```css/* 查找並替換 */background: #ffffff → background: var(--background-card)color: #333333 → color: var(--text-primary)border: 1px solid #e0e0e0 → border: 1px solid var(--border-color)box-shadow: 0 5px 15px rgba(0,0,0,0.1) → box-shadow: var(--shadow-medium)```主頁面整合index.html 特殊處理：```html<!-- 主頁面可能需要特殊的主題切換器位置 --><div class="main-header">    <h1>金錢教學遊戲</h1>    <!-- 主題切換器會自動出現，無需手動添加 --></div><style>/* 調整主頁面的主題切換器位置 */@media (max-width: 768px) {    .theme-switcher {        position: relative;        top: auto;        right: auto;        margin: 20px auto;        display: flex;        justify-content: center;    }}</style>```---♿ 無障礙功能說明鍵盤操作| 快捷鍵 | 功能 ||--------|------|| `Ctrl + T` | 切換主題 || `Tab` | 聚焦到主題切換器 || `Enter` / `Space` | 啟動主題切換 || `F1` | 開啟無障礙說明（如果實作） |語音支援主題系統會自動：朗讀主題切換狀態提供操作指引與現有語音系統整合視覺輔助高對比模式支援 - 自動檢測系統偏好減少動畫模式 - 遵循使用者偏好設定大觸控區域 - 移動設備友善清晰焦點指示 - 鍵盤導航增強---🐛 常見問題和解決方案Q1: 主題切換器沒有出現解決方法：確認 `theme-system.js` 已正確載入檢查 JavaScript 控制台是否有錯誤確認 DOM 已完全載入```javascript// 手動初始化（如果需要）document.addEventListener('DOMContentLoaded', function() {    if (!window.ThemeSystem) {        new ThemeSystem();    }});```Q2: 主題變數沒有生效解決方法：確認 `theme-system.css` 在其他 CSS 之前載入檢查 CSS 變數語法是否正確使用瀏覽器開發工具檢查計算樣式```css/* 檢查 CSS 變數是否生效 */.test-element {    background: var(--primary-color, #667eea); /* 回退值 */}```Q3: 主題設定沒有保存解決方法：檢查瀏覽器是否支援 localStorage確認沒有隱私模式限制檢查控制台的存儲相關錯誤```javascript// 檢查 localStorage 支援if (typeof(Storage) !== "undefined") {    console.log("localStorage 可用");} else {    console.log("localStorage 不可用");}```Q4: 深色模式下圖片太亮解決方法：為圖片添加深色模式濾鏡：```css/* 自動調整圖片亮度 */[data-theme="dark"] img:not(.theme-img-preserve) {    filter: brightness(0.9) contrast(1.1);}/* 保持特定圖片不變 */.logo, .important-image {    filter: none !important;}```Q5: 動畫效果在主題切換時卡頓解決方法：優化過渡動畫：```css/* 減少同時進行的動畫數量 */* {    transition:         background-color var(--transition-fast),        color var(--transition-fast);}/* 避免對 transform 和 opacity 以外的屬性使用動畫 */```---🧪 測試檢查清單功能測試[ ] 主題切換器正確顯示[ ] 點擊切換功能正常[ ] 鍵盤快捷鍵有效（Ctrl+T）[ ] 主題設定會保存並恢復[ ] 跨頁面主題同步[ ] 系統偏好檢測視覺測試[ ] 生動模式色彩正確[ ] 深色模式色彩正確[ ] 所有元素都有對應的主題變數[ ] 過渡動畫流暢[ ] 響應式佈局正常無障礙測試[ ] 鍵盤導航完整[ ] 語音提示功能[ ] 高對比模式支援[ ] 螢幕閱讀器相容[ ] 觸控設備操作相容性測試[ ] Chrome/Firefox/Safari/Edge[ ] Windows/macOS/Linux[ ] 桌面和移動設備[ ] 不同螢幕解析度---📈 效能優化建議CSS 優化```css/* 使用 CSS 變數的高效寫法 */:root {    --primary-hue: 240;    --primary-saturation: 70%;    --primary-lightness: 60%;    --primary-color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness));}/* 避免過度使用 transition */.theme-transition {    transition: background-color 0.3s ease, color 0.3s ease;}```JavaScript 優化```javascript// 使用防抖避免過於頻繁的主題切換function debounce(func, wait) {    let timeout;    return function executedFunction(...args) {        const later = () => {            clearTimeout(timeout);            func(...args);        };        clearTimeout(timeout);        timeout = setTimeout(later, wait);    };}// 優化主題切換處理const handleThemeChange = debounce((theme) => {    // 主題變化處理邏輯}, 300);```---🔮 未來擴展計劃更多主題選項```javascript// 未來可能添加的主題const futureThemes = {    highContrast: {        name: 'high-contrast',        displayName: '高對比',        icon: '⚫',        description: '極高對比度，視覺障礙友善'    },    colorBlind: {        name: 'color-blind',        displayName: '色盲友善',        icon: '🌈',        description: '色盲友善的色彩配置'    }};```自訂主題```javascript// 允許使用者自訂主題色彩ThemeSystem.prototype.createCustomTheme = function(colors) {    // 實作自訂主題功能};```主題動畫```css/* 更豐富的主題切換動畫 */@keyframes themeSwitch {    0% { filter: brightness(1); }    50% { filter: brightness(1.2); }    100% { filter: brightness(1); }}```---📞 技術支援問題回報如果在整合過程中遇到問題，請提供以下資訊：瀏覽器類型和版本作業系統資訊錯誤訊息或螢幕截圖重現步驟功能建議歡迎提出主題系統的改進建議：新的主題選項無障礙功能改進效能優化建議使用體驗改善---文件版本：v1.0.0  最後更新：2025-01-26  維護者：Theme System Development Team